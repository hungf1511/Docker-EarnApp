name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-sub-build]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Notify Start on Discord
        run: |
          TIMESTAMP=$(TZ=Asia/Manila date +"%Y-%m-%d %H:%M:%S %Z %z")
          JSON_PAYLOAD=$(jq -n --arg title "üõ†Ô∏è Build Started" \
            --arg repo "**üì¶ Repository:** ${{ github.repository }}" \
            --arg branch "**üå± Branch:** ${{ github.ref }}" \
            --arg time "**üïí Triggered at:** ${TIMESTAMP}" \
            '{ "embeds": [{ "title": $title, "description": ($repo + "\n" + $branch + "\n" + $time) }] }')
          
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" -H "Content-Type: application/json" -d "$JSON_PAYLOAD"
      
      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Image
        run: |
          docker buildx build --platform linux/amd64 \
          -t ghcr.io/${{ github.actor }}/docker-earnapp:latest --push .

      - name: Notify Success on Discord
        if: success()
        run: |
          TIMESTAMP=$(TZ=Asia/Manila date +"%Y-%m-%d %H:%M:%S %Z %z")
          JSON_PAYLOAD=$(jq -n --arg title "‚úÖ Build Done" \
            --arg repo "**üì¶ Repository:** ${{ github.repository }}" \
            --arg branch "**üå± Branch:** ${{ github.ref }}" \
            --arg time "**üïí Completed at:** ${TIMESTAMP}" \
            '{ "embeds": [{ "title": $title, "description": ($repo + "\n" + $branch + "\n" + $time) }] }')
          
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" -H "Content-Type: application/json" -d "$JSON_PAYLOAD"

      - name: Create Release Commit
        if: ${{ github.event_name == 'schedule' }}
        run: |
          # Download the install script and extract the version
          wget -cq "https://brightdata.com/static/earnapp/install.sh" --output-document=setup.sh
          VERSION=$(grep VERSION= setup.sh | cut -d'"' -f2)
          # Get the current date formatted as MM-DD-YYYY
          DATE=$(date +"%m-%d-%Y")
          # Construct the commit message (the [skip ci] flag prevents CI re-triggering)
          COMMIT_MSG="${DATE} - v${VERSION} [skip ci]"
  
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git commit --allow-empty -m "$COMMIT_MSG"
          git remote set-url origin https://techroy23:${{ secrets.GH_PAT }}@github.com/hungf1511/Docker-EarnApp.git
          git push origin main

      - name: Notify Failure on Discord
        if: failure()
        run: |
          TIMESTAMP=$(TZ=Asia/Manila date +"%Y-%m-%d %H:%M:%S %Z %z")
          JSON_PAYLOAD=$(jq -n --arg title "‚ùå Build Error" \
            --arg repo "**üì¶ Repository:** ${{ github.repository }}" \
            --arg branch "**üå± Branch:** ${{ github.ref }}" \
            --arg time "**üïí Failed at:** ${TIMESTAMP}" \
            '{ "embeds": [{ "title": $title, "description": ($repo + "\n" + $branch + "\n" + $time) }] }')
          
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" -H "Content-Type: application/json" -d "$JSON_PAYLOAD"
